name: talesofai-official-ci

on:
  push:
    branches:
      - main

jobs:
  check-artifact:
    runs-on: ubuntu-latest

    outputs:
      DOCKER_IMAGE_EXIST: ${{steps.check_docker_image.outputs.DOCKER_IMAGE_EXIST}}

    environment:
      name: release

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Check if Docker image exists
        id: check_docker_image
        run: |
          function docker_tag_exists() {
            curl --silent -f -lSL https://hub.docker.com/v2/repositories/$1/tags/$2 > /dev/null
          }

          if docker_tag_exists ${{ secrets.DOCKER_USERNAME }}/talesofai-official ${{ github.sha }}; then
            echo "Docker image ${{ secrets.DOCKER_USERNAME }}/talesofai-official:${{ github.sha }} already exist, skip build"
            echo "DOCKER_IMAGE_EXIST=true" >> $GITHUB_OUTPUT
          else
            echo "Docker image ${{ secrets.DOCKER_USERNAME }}/talesofai-official:${{ github.sha }} not exist, ready for build"
            echo "DOCKER_IMAGE_EXIST=false" >> $GITHUB_OUTPUT
          fi

  build:
    runs-on: ubuntu-latest

    needs:
      - check-artifact

    if: ${{needs.check-artifact.outputs.DOCKER_IMAGE_EXIST == 'false'}}

    environment:
      name: release

    env:
      OSS_ACCESS_KEY_ID: ${{ secrets.OSS_ACCESS_KEY_ID }}
      OSS_ACCESS_KEY_SECRET: ${{ secrets.OSS_ACCESS_KEY_SECRET }}
      OSS_BUCKET: ${{ secrets.OSS_BUCKET }}
      OSS_REGION: ${{ secrets.OSS_REGION }}

    defaults:
      run:
        working-directory: ./

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        with:
          version: 8.6.0

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: pnpm
          cache-dependency-path: ./pnpm-lock.yaml

      - name: Install dependents
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm build

      - name: Upload Assets to AliOss
        run: pnpm upload

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker and push
        uses: docker/build-push-action@v4
        with:
          context: ./

          # https://docs.docker.com/build/cache/backends/gha/#scope
          cache-from: type=gha,scope=talesofai-official-docker-build
          cache-to: type=gha,mode=max,scope=talesofai-official-docker-build

          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/talesofai-official:latest
            ${{ secrets.DOCKER_USERNAME }}/talesofai-official:${{ github.sha }}
          platforms: linux/amd64,linux/arm64

  deploy:
    if: ${{!failure()}}
    needs:
      - build
    runs-on: ubuntu-latest

    environment:
      name: release

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Deploy Image
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: set image deployment/official *=${{ secrets.DOCKER_USERNAME }}/talesofai-official:${{ github.sha }} -n frontend
